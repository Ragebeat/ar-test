{"version":3,"sources":["mindar-viewer2.js","App.js","reportWebVitals.js","index.js"],"names":["Ar","sceneRef","useRef","useEffect","sceneEl","current","arSystem","systems","addEventListener","start","stop","ref","mindar-image","color-space","embedded","renderer","vr-mode-ui","device-orientation-permission-ui","position","rotation","color","radius","height","width","look-controls","App","useState","started","setStarted","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAEe,SAASA,IACtB,IAAMC,EAAWC,iBAAO,MAaxB,OAXAC,qBAAU,WACR,IAAMC,EAAUH,EAASI,QACnBC,EAAWF,EAAQG,QAAQ,uBAIjC,OAHAH,EAAQI,iBAAiB,eAAe,WACtCF,EAASG,WAEJ,WACLH,EAASI,UAEV,IAGD,0BACAC,IAAKV,EACLW,eAAa,2LACbC,cAAY,OACZC,UAAQ,EACRC,SAAS,iDACTC,aAAW,iBACXC,mCAAiC,iBAPjC,UASE,uBAAOC,SAAS,YAAYC,SAAS,SAASC,MAAM,YACpD,0BAAUF,SAAS,YAAYG,OAAO,OAAOD,MAAM,YACnD,4BAAYF,SAAS,YAAYG,OAAO,MAAMC,OAAO,MAAMF,MAAM,YACjE,yBAASF,SAAS,SAASC,SAAS,UAAUI,MAAM,IAAID,OAAO,IAAIF,MAAM,YACzE,uBAAOA,MAAM,YACb,0BAAUF,SAAS,QAAQM,gBAAc,sBCWhCC,MAnCf,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,KAEb,OACE,sBAAKC,UAAU,MAAf,UACE,iCACIF,GACA,wBACEG,QAAS,WACPF,GAAW,IAFf,mBAQDD,GACC,wBACEG,QAAS,WACPF,GAAW,IAFf,qBAUHD,GACC,sBAAKE,UAAU,YAAf,UACE,cAAC,EAAD,IACA,iCCvBKE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a6fc7591.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nexport default function Ar() {\n  const sceneRef = useRef(null);\n\n  useEffect(() => {\n    const sceneEl = sceneRef.current;\n    const arSystem = sceneEl.systems[\"mindar-image-system\"];\n    sceneEl.addEventListener(\"renderstart\", () => {\n      arSystem.start(); // start AR\n    });\n    return () => {\n      arSystem.stop();\n    };\n  }, []);\n\n  return (\n    <a-scene\n    ref={sceneRef}\n    mindar-image=\"imageTargetSrc: https://cdn.jsdelivr.net/gh/hiukim/mind-ar-js@1.0.0/examples/image-tracking/assets/card-example/card.mind; autoStart: false; uiLoading: no; uiError: no; uiScanning: no;\"\n    color-space=\"sRGB\"\n    embedded\n    renderer=\"colorManagement: true, physicallyCorrectLights\"\n    vr-mode-ui=\"enabled: false\"\n    device-orientation-permission-ui=\"enabled: false\"\n    >\n      <a-box position=\"-1 0.5 -3\" rotation=\"0 45 0\" color=\"#4CC3D9\"></a-box>\n      <a-sphere position=\"0 1.25 -5\" radius=\"1.25\" color=\"#EF2D5E\"></a-sphere>\n      <a-cylinder position=\"1 0.75 -3\" radius=\"0.5\" height=\"1.5\" color=\"#FFC65D\"></a-cylinder>\n      <a-plane position=\"0 0 -4\" rotation=\"-90 0 0\" width=\"4\" height=\"4\" color=\"#7BC8A4\"></a-plane>\n      <a-sky color=\"#ECECEC\"></a-sky>\n      <a-camera position=\"0 0 0\" look-controls=\"enabled: false\"></a-camera>\n    </a-scene>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"mind-ar/dist/mindar-image.prod.js\";\nimport \"aframe\";\nimport \"mind-ar/dist/mindar-image-aframe.prod.js\";\nimport \"./App.css\";\nimport MindARViewer from \"./mindar-viewer2\";\n\nfunction App() {\n  const [started, setStarted] = useState(false);\n  return (\n    <div className=\"App\">\n      <div>\n        {!started && (\n          <button\n            onClick={() => {\n              setStarted(true);\n            }}\n          >\n            Start\n          </button>\n        )}\n        {started && (\n          <button\n            onClick={() => {\n              setStarted(false);\n            }}\n          >\n            Stop\n          </button>\n        )}\n      </div>\n\n      {started && (\n        <div className=\"container\">\n          <MindARViewer />\n          <video></video>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}